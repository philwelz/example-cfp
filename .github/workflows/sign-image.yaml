name: Sign Image & SBOM

on:
  workflow_call:
    inputs:
      ### Values from CICD Workflow ###
      REGISTRY:
        required: true
        type: string
        description: 'The Environemnt which should be used.'
      ORGANISATION_NAME:
        type: string
        required: true
        description: 'The Subscription ID which should be used.'
      COMMIT_SHORT_SHA:
        type: string
        required: true
        description: 'The Subscription ID which should be used.'
env:
  SBOM: '${{ inputs.COMMIT_SHORT_SHA }}-patched-sbom.cdx.json'
  IMAGE: '${{ inputs.REGISTRY }}/${{ inputs.ORGANISATION_NAME }}/example:${{ inputs.COMMIT_SHORT_SHA }}-patched'
  GHCR: '${{ inputs.REGISTRY }}/${{ inputs.ORGANISATION_NAME }}/example'

jobs:
  sign-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read 
      packages: write # needed for publishing the patched image to the GitHub Container Registry
      id-token: write # needed for signing the images with GitHub OIDC Token

    steps:
      - name: Install Cosign
        # https://github.com/sigstore/cosign-installer
        uses: sigstore/cosign-installer@v3.3.0

      # Install Crane
        # https://github.com/imjasonh/setup-crane
      - uses: imjasonh/setup-crane@v0.3

      - name: Get Digest
        id: crane
        run: |
          DIGEST=$(crane digest ${{ env.IMAGE }})
          echo "DIGEST=$DIGEST" >> $GITHUB_OUTPUT

      # - name: Generate SBOM SPDX
      #   # https://github.com/anchore/sbom-action/tree/main
      #   uses: anchore/sbom-action@v0
      #   with:
      #     image: ${{ inputs.REGISTRY }}/${{ inputs.ORGANISATION_NAME }}/example:${{ inputs.COMMIT_SHORT_SHA }}-patched
      #     format: spdx
      #     artifact-name: ${{ inputs.COMMIT_SHORT_SHA }}-sbom.spdx
      #     output-file: /tmp/${{ inputs.COMMIT_SHORT_SHA }}-sbom.spdx

      # - name: Publish SBOM
      #   # https://github.com/anchore/sbom-action/tree/main
      #   uses: anchore/sbom-action/publish-sbom@v0
      #   with:
      #     sbom-artifact-match: ".*\\.spdx$"
     
      - name: Download SBOM artifact
        uses: actions/download-artifact@v3
        with:
          name: '${{ env.SBOM }}'

      - name: Login to GitHub Container Registry
        id: login
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Attach SBOM to Image
        run: cosign attest --yes -predicate ${{ env.SBOM }} ${{ env.IMAGE }} --type=cyclonedx

      - name: Sign SBOM
        run: cosign sign --yes '${{ env.GHCR }}@${{ steps.crane.outputs.DIGEST }}.att'

      - name: Sign the OCI artifact
        run: cosign sign --yes '${{ env.GHCR }}@${{ steps.crane.outputs.DIGEST }}'

      # - name: Docker get image digest
      #   if: steps.login.conclusion == 'success'
      #   id: image
      #   run: |
      #     apt-get update && apt-get install -y jq
      #     echo "digest=$(docker image inspect ${{ steps.copa.outputs.patched-image }} | jq -r '.[0].RepoDigests[0]')" >> $GITHUB_OUTPUT

      # - name: Cosign sign the image with GitHub OIDC Token
      #   env:
      #     DIGEST: ${{ steps.image.outputs.digest }}
      #     TAG: ${{ steps.copa.outputs.patched-image }}
      #   run: |
      #     cosign sign --yes ${TAG}@${DIGEST}
