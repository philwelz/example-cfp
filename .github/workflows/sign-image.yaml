name: Sign Image & SBOM

on:
  workflow_call:
    inputs:
      ### Values from CICD Workflow ###
      REGISTRY:
        required: true
        type: string
        description: 'The Environemnt which should be used.'
      ORGANISATION_NAME:
        type: string
        required: true
        description: 'The Subscription ID which should be used.'
      COMMIT_SHORT_SHA:
        type: string
        required: true
        description: 'The Subscription ID which should be used.'

jobs:
  sign-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read 
      packages: write # needed for publishing the patched image to the GitHub Container Registry
      id-token: write # needed for signing the images with GitHub OIDC Token

    steps:
      - name: Install Cosign
        # https://github.com/sigstore/cosign-installer
        uses: sigstore/cosign-installer@v3.3.0
      
      - name: Install syft
        uses: anchore/sbom-action/download-syft@0

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ inputs.REGISTRY }}/${{ inputs.ORGANISATION_NAME }}/example:${{ inputs.COMMIT_SHORT_SHA }}-patched
          format: spdx
          artifact-name: ${{ inputs.COMMIT_SHORT_SHA }}-sbom.spdx
          output-file: ${{ inputs.COMMIT_SHORT_SHA }}-sbom.spdx


      # - name: Docker get image digest
      #   if: steps.login.conclusion == 'success'
      #   id: image
      #   run: |
      #     apt-get update && apt-get install -y jq
      #     echo "digest=$(docker image inspect ${{ steps.copa.outputs.patched-image }} | jq -r '.[0].RepoDigests[0]')" >> $GITHUB_OUTPUT

      # - name: Cosign sign the image with GitHub OIDC Token
      #   env:
      #     DIGEST: ${{ steps.image.outputs.digest }}
      #     TAG: ${{ steps.copa.outputs.patched-image }}
      #   run: |
      #     cosign sign --yes ${TAG}@${DIGEST}